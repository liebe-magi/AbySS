WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
COMMENT    =  { line_comment | block_comment }

line_comment  = _{ "//" ~ (!"\n" ~ ANY)* }
block_comment = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }

statements = { SOI ~ statement* ~ EOI }
statement  = { (forge_var | unveil | reveal | orbit | orbit_flow | assignment | expression) ~ ";" }
block      = { "{" ~ statement* ~ "}" }

forge_var  = { "forge" ~ morph? ~ identifier ~ ":" ~ type ~ "=" ~ expression }
assignment = { identifier ~ assignment_op ~ expression }
unveil     = { "unveil" ~ "(" ~ expression ~ ("," ~ expression)* ~ ")" }
reveal     = { "reveal" ~ expression* }

oracle_expr             = { "oracle" ~ oracle_conditional? ~ "{" ~ oracle_branch* ~ "}" }
oracle_conditional      = { "(" ~ (conditional_assignments | expressions) ~ ")" }
conditional_assignments = { conditional_assignment ~ ("," ~ conditional_assignment)* }
conditional_assignment  = { identifier ~ "=" ~ expression }

oracle_branch = { pattern ~ "=>" ~ (block | statement) }
pattern       = { "(" ~ pattern_elements ~ ")" | "_" }

pattern_elements = { pattern_element ~ ("," ~ pattern_element)* }
pattern_element  = { expression | "_" }

orbit        = { "orbit" ~ orbit_params? ~ block }
orbit_params = { "(" ~ orbit_param ~ ("," ~ orbit_param)* ~ ")" }
orbit_param  = { identifier ~ "=" ~ range_expr }
range_expr   = { expression ~ range_op ~ expression }
range_op     = { "..=" | ".." }

orbit_flow  = { resume_expr | eject_expr }
resume_expr = { "resume" ~ identifier? }
eject_expr  = { "eject" ~ identifier? }

trans_expr = { "trans" ~ "(" ~ expression ~ "as" ~ type ~ ")" }

identifier = @{ ASCII_ALPHANUMERIC+ }
type       =  { "omen" | "aether" | "arcana" | "rune" }
omen       = @{ "boon" | "hex" }
aether     = @{ sign? ~ ASCII_DIGIT+ ~ "." ~ ASCII_DIGIT+ }
arcana     = @{ sign? ~ ASCII_DIGIT+ }
rune       = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }

sign  = { "+" | "-" }
morph = { "morph" }

expressions = { expression ~ ("," ~ expression)* }
expression  = { oracle_expr | or_expr }
or_expr     = { and_expr ~ (or_op ~ and_expr)* }
and_expr    = { not_expr ~ (and_op ~ not_expr)* }
not_expr    = { not_op? ~ comp_expr }
comp_expr   = { add_expr ~ (comp_op ~ add_expr)? }
add_expr    = { mul_expr ~ (add_op ~ mul_expr)* }
mul_expr    = { pow_expr ~ (mul_op ~ pow_expr)* }
pow_expr    = { factor ~ (pow_op ~ factor)* }
factor      = { trans_expr | omen | aether | arcana | rune | identifier | "(" ~ expression ~ ")" }

assignment_op = { "+=" | "-=" | "*=" | "/=" | "%=" | "^=" | "**=" | "=" }

comp_op = { "==" | "!=" | "<=" | ">=" | "<" | ">" }
add_op  = { "+" | "-" }
mul_op  = { "*" | "/" | "%" }
pow_op  = { "^" | "**" }
or_op   = { "||" }
and_op  = { "&&" }
not_op  = { "!" }
